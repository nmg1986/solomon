#!/usr/bin/python
#-*-coding:utf8-*-

import main 
import time
import log 
import functions
import sendemail
import globalconf
import daemon
import signal
import sys
import multiprocessing

daemon.initDaemon()

parser=main.initparser("/etc/solomon/solomon.conf")
logger=log.initlog(globalconf.log)

all_sections=parser.sections()

check_list=main.get_enabled_sections(parser,all_sections)

functions.set_pid(globalconf.pid)

def quit(signum,message):
        logger.info("solomon shutdown")
	sys.exit()

signal.signal(signal.SIGTERM,quit)

logger.info("solomon start")
time.sleep(10.0)

def check_procs(arg=None):
	while True:
		for my_section in check_list:
			if parser.has_option(my_section,"check_command"):
				command_name=parser.get(my_section,"check_command")	
				if len(command_name) != 0:
					check_command=functions.absolute_path(command_name)
					if functions.is_exist(check_command) and functions.is_executable(check_command):
						status=functions.run(check_command)
						if not status:
							logger.warning(functions.strcat(my_section," ","is dead"))	
							if sendemail.enabled == "true":
								logger.info("Send Email")	
								if sendemail.send_email(my_section):
									logger.info("Email Send Success!")		
								else:
									logger.info("Email Send Failed!")
							logger.info("Service Failover!")
							functions.service_failover()
						else:
							logger.info(functions.strcat(my_section," ", "is ok"))	
					else:
						print functions.strcat(my_section,":","check command not exist or executabled")
						exit(3)
				else:
					print functions.strcat(my_section,":","check command must be defined")
					exit(2)
			else:
				print functions.strcat(my_section,":","check_command option must be defined")
				exit(1)
		time.sleep(float(globalconf.check_interval))

if __name__ == "__main__":
	p = multiprocessing.Process(target=check_procs)
	p.start()
